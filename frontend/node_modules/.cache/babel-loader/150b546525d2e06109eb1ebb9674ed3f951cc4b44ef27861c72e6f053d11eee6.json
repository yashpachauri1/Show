{"ast":null,"code":"var _jsxFileName = \"C:\\\\react\\\\TaskJob\\\\frontend\\\\src\\\\pages\\\\Details.js\",\n  _s = $RefreshSig$();\nimport { useLoaderData, redirect, json } from \"react-router-dom\";\nimport TaskItem from \"../components/TaskItem\";\nimport { getAuthToken } from \"../util/Auth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Details = () => {\n  _s();\n  const data = useLoaderData();\n  console.log(\"eve\", data);\n  const task = data.event;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(TaskItem, {\n      task: task\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(Details, \"5thj+e1edPyRpKif1JmVRC6KArE=\", false, function () {\n  return [useLoaderData];\n});\n_c = Details;\nexport default Details;\nexport async function loader({\n  request,\n  params\n}) {\n  const token = getAuthToken();\n  const taskId = params.taskId;\n  console.log(taskId);\n  const response = await fetch(`http://localhost:5000/${taskId}`, {\n    headers: {\n      'Authorization': 'Bearer ' + token // Add a space after 'Bearer'\n    }\n  });\n\n  if (!response.ok) {\n    return new Response(JSON.stringify({\n      message: 'Could not fetch events'\n    }), {\n      status: 500\n    });\n  } else {\n    console.log(response);\n    return response;\n  }\n}\n\n// for delete\nexport async function action({\n  request,\n  params\n}) {\n  const taskId = params.taskId;\n  const response = await fetch(`'http://localhost:5000/${taskId}`, {\n    method: request.method\n  });\n  if (!response.ok) {\n    throw json({\n      message: 'Could not fetch details for selected event'\n    }, {\n      status: 500\n    });\n  }\n  return redirect('/tasks');\n}\nvar _c;\n$RefreshReg$(_c, \"Details\");","map":{"version":3,"names":["useLoaderData","redirect","json","TaskItem","getAuthToken","jsxDEV","_jsxDEV","Fragment","_Fragment","Details","_s","data","console","log","task","event","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","loader","request","params","token","taskId","response","fetch","headers","ok","Response","JSON","stringify","message","status","action","method","$RefreshReg$"],"sources":["C:/react/TaskJob/frontend/src/pages/Details.js"],"sourcesContent":["import { useLoaderData, redirect, json } from \"react-router-dom\";\r\nimport TaskItem from \"../components/TaskItem\";\r\nimport { getAuthToken } from \"../util/Auth\";\r\nconst Details = () => {\r\n\r\n    const data = useLoaderData();\r\n    console.log(\"eve\",data)\r\n    const task = data.event\r\n\r\n    return (\r\n        <>\r\n            <TaskItem task={task} />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Details\r\n\r\nexport async function loader({ request, params }) {\r\n    const token = getAuthToken();\r\n    const taskId = params.taskId;\r\n    console.log(taskId);\r\n\r\n    const response = await fetch(`http://localhost:5000/${taskId}`, {\r\n        headers: {\r\n            'Authorization': 'Bearer ' + token // Add a space after 'Bearer'\r\n        }\r\n    });\r\n\r\n    if (!response.ok) {\r\n        return new Response(JSON.stringify({ message: 'Could not fetch events' }), { status: 500 });\r\n    } else {\r\n        console.log(response);\r\n        return response;\r\n    }\r\n}\r\n\r\n// for delete\r\nexport async function action({ request, params }) {\r\n\r\n    const taskId = params.taskId;\r\n\r\n    const response = await fetch(`'http://localhost:5000/${taskId}`, {\r\n        method: request.method\r\n    });\r\n    if (!response.ok) {\r\n        throw json({ message: 'Could not fetch details for selected event' }, { status: 500 }\r\n\r\n        );\r\n\r\n    }\r\n\r\n    return redirect('/tasks')\r\n\r\n}\r\n\r\n"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,QAAQ,EAAEC,IAAI,QAAQ,kBAAkB;AAChE,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,SAASC,YAAY,QAAQ,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAC5C,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAElB,MAAMC,IAAI,GAAGX,aAAa,CAAC,CAAC;EAC5BY,OAAO,CAACC,GAAG,CAAC,KAAK,EAACF,IAAI,CAAC;EACvB,MAAMG,IAAI,GAAGH,IAAI,CAACI,KAAK;EAEvB,oBACIT,OAAA,CAAAE,SAAA;IAAAQ,QAAA,eACIV,OAAA,CAACH,QAAQ;MAACW,IAAI,EAAEA;IAAK;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC,gBAC1B,CAAC;AAEX,CAAC;AAAAV,EAAA,CAXKD,OAAO;EAAA,QAEIT,aAAa;AAAA;AAAAqB,EAAA,GAFxBZ,OAAO;AAab,eAAeA,OAAO;AAEtB,OAAO,eAAea,MAAMA,CAAC;EAAEC,OAAO;EAAEC;AAAO,CAAC,EAAE;EAC9C,MAAMC,KAAK,GAAGrB,YAAY,CAAC,CAAC;EAC5B,MAAMsB,MAAM,GAAGF,MAAM,CAACE,MAAM;EAC5Bd,OAAO,CAACC,GAAG,CAACa,MAAM,CAAC;EAEnB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,yBAAwBF,MAAO,EAAC,EAAE;IAC5DG,OAAO,EAAE;MACL,eAAe,EAAE,SAAS,GAAGJ,KAAK,CAAC;IACvC;EACJ,CAAC,CAAC;;EAEF,IAAI,CAACE,QAAQ,CAACG,EAAE,EAAE;IACd,OAAO,IAAIC,QAAQ,CAACC,IAAI,CAACC,SAAS,CAAC;MAAEC,OAAO,EAAE;IAAyB,CAAC,CAAC,EAAE;MAAEC,MAAM,EAAE;IAAI,CAAC,CAAC;EAC/F,CAAC,MAAM;IACHvB,OAAO,CAACC,GAAG,CAACc,QAAQ,CAAC;IACrB,OAAOA,QAAQ;EACnB;AACJ;;AAEA;AACA,OAAO,eAAeS,MAAMA,CAAC;EAAEb,OAAO;EAAEC;AAAO,CAAC,EAAE;EAE9C,MAAME,MAAM,GAAGF,MAAM,CAACE,MAAM;EAE5B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,0BAAyBF,MAAO,EAAC,EAAE;IAC7DW,MAAM,EAAEd,OAAO,CAACc;EACpB,CAAC,CAAC;EACF,IAAI,CAACV,QAAQ,CAACG,EAAE,EAAE;IACd,MAAM5B,IAAI,CAAC;MAAEgC,OAAO,EAAE;IAA6C,CAAC,EAAE;MAAEC,MAAM,EAAE;IAAI,CAEpF,CAAC;EAEL;EAEA,OAAOlC,QAAQ,CAAC,QAAQ,CAAC;AAE7B;AAAC,IAAAoB,EAAA;AAAAiB,YAAA,CAAAjB,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}