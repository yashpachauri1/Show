{"ast":null,"code":"var _jsxFileName = \"C:\\\\react\\\\Task-app\\\\frontend\\\\src\\\\components\\\\TaskForm.js\",\n  _s = $RefreshSig$();\nimport { Form, redirect, useNavigate, useNavigation, json } from 'react-router-dom';\nimport classes from './TaskForm.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskForm = ({\n  task\n}) => {\n  _s();\n  const navigate = useNavigate();\n  const navigation = useNavigation();\n  const isSubmitting = navigation.state === 'submitting';\n  const cancelHandler = () => {\n    navigate('..');\n  };\n  return /*#__PURE__*/_jsxDEV(Form, {\n    method: \"POST\",\n    className: classes.form,\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        name: \"name\",\n        required: true,\n        defaultValue: task ? task.title : ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"task\",\n        children: \"Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"task\",\n        type: \"text\",\n        name: \"task\",\n        required: true,\n        defaultValue: task ? task.date : ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        disabled: isSubmitting,\n        onClick: cancelHandler,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: isSubmitting,\n        type: \"submit\",\n        children: isSubmitting ? 'submitting' : 'add'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n};\n_s(TaskForm, \"t46O4tL2czeJKfW+Yn/E/3J1StE=\", false, function () {\n  return [useNavigate, useNavigation];\n});\n_c = TaskForm;\nexport default TaskForm;\nexport async function action({\n  request,\n  params\n}) {\n  const data = await request.formData();\n  const taskData = {\n    name: data.get('name'),\n    task: data.get('task')\n  };\n  const response = await fetch('http://localhost:5000', {\n    method: 'POST',\n    body: JSON.stringify(taskData),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  });\n  if (!response.ok) {\n    throw json({\n      message: 'Could not save event'\n    }, {\n      status: 500\n    });\n  } else {\n    redirect('tasks');\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"TaskForm\");","map":{"version":3,"names":["Form","redirect","useNavigate","useNavigation","json","classes","jsxDEV","_jsxDEV","TaskForm","task","_s","navigate","navigation","isSubmitting","state","cancelHandler","method","className","form","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","name","required","defaultValue","title","date","actions","disabled","onClick","_c","action","request","params","data","formData","taskData","get","response","fetch","body","JSON","stringify","headers","ok","message","status","$RefreshReg$"],"sources":["C:/react/Task-app/frontend/src/components/TaskForm.js"],"sourcesContent":["import { Form, redirect, useNavigate, useNavigation,json } from 'react-router-dom';\r\nimport classes from './TaskForm.module.css'\r\n\r\nconst TaskForm = ({task}) => {\r\nconst navigate = useNavigate();\r\nconst navigation = useNavigation();\r\n\r\nconst isSubmitting = navigation.state === 'submitting';\r\n\r\nconst cancelHandler = () =>{\r\n      navigate('..');\r\n}\r\n    return (\r\n        <Form method='POST' className={classes.form}>\r\n            <p>\r\n                <label htmlFor=\"name\">Name</label>\r\n                <input type='text' id='name' name='name'\r\n                    required\r\n                    defaultValue={task ? task.title : ''}\r\n                />\r\n            </p>\r\n            <p>\r\n                <label htmlFor=\"task\">Task</label>\r\n                <input\r\n                    id=\"task\"\r\n                    type=\"text\"\r\n                    name=\"task\"\r\n                    required\r\n\r\n                    defaultValue={task ? task.date : ''}\r\n                />\r\n            </p>\r\n\r\n            <div className={classes.actions}>\r\n                <button type=\"button\" disabled={isSubmitting} onClick={cancelHandler}>\r\n                    Cancel\r\n                </button>\r\n                <button disabled={isSubmitting} type=\"submit\" >\r\n                    {isSubmitting ? 'submitting' : 'add'}\r\n                </button>\r\n            </div>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default TaskForm;\r\n\r\nexport async function action({request, params}){\r\nconst data = await request.formData();\r\n\r\nconst taskData={\r\n    name:data.get('name'),\r\n    task:data.get('task')\r\n}\r\n\r\n const response = await fetch('http://localhost:5000',{\r\n    method:'POST',\r\n    body:JSON.stringify(taskData),\r\n    headers:{\r\n        \"Content-Type\": \"application/json\"\r\n    }\r\n })   \r\n if(!response.ok){\r\n    throw json({ message: 'Could not save event' }, { status: 500 });\r\n }\r\n else{\r\n    redirect('tasks');\r\n }\r\n\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}