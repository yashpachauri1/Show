{"ast":null,"code":"var _jsxFileName = \"C:\\\\react\\\\TaskJob\\\\frontend\\\\src\\\\pages\\\\Tasks.js\",\n  _s = $RefreshSig$();\nimport { json, useLoaderData, Await } from \"react-router-dom\";\nimport { Suspense } from 'react';\nimport TaskList from \"../components/TaskList\";\nimport { getAuthToken } from \"../util/Auth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Tasks = () => {\n  _s();\n  const tasks = useLoaderData();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Suspense, {\n      fallback: /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          textAlign: 'center'\n        },\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 29\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(Await, {\n        resolve: tasks,\n        children: loadedTasks => /*#__PURE__*/_jsxDEV(TaskList, {\n          tasks: loadedTasks\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 35\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_s(Tasks, \"vnWBCFrZ+g1uJOr2+5KE27SVsrs=\", false, function () {\n  return [useLoaderData];\n});\n_c = Tasks;\nexport default Tasks;\n//'http://localhost:5000/'\n// https://react-backend-h14a.onrender.com/\nexport async function loader() {\n  const token = getAuthToken();\n  const response = await fetch('http://localhost:5000/', {\n    // headers:{\n    //     'Authorization' : 'Bearer ' + token\n    //   }\n  });\n  if (!response.ok) {\n    // return { isError: true, message: 'Could not fetch events.' };\n    // throw new Response(JSON.stringify({ message: 'Could not fetch events.' }), {\n    //   status: 500,\n    // });\n    throw json({\n      message: 'Could not fetch events.'\n    }, {\n      status: 500\n    });\n  } else {\n    const resData = await response.json();\n    return resData.events;\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"Tasks\");","map":{"version":3,"names":["json","useLoaderData","Await","Suspense","TaskList","getAuthToken","jsxDEV","_jsxDEV","Fragment","_Fragment","Tasks","_s","tasks","children","fallback","style","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","resolve","loadedTasks","_c","loader","token","response","fetch","ok","message","status","resData","events","$RefreshReg$"],"sources":["C:/react/TaskJob/frontend/src/pages/Tasks.js"],"sourcesContent":["import { json, useLoaderData, Await } from \"react-router-dom\";\r\nimport { Suspense } from 'react';\r\nimport TaskList from \"../components/TaskList\";\r\nimport { getAuthToken } from \"../util/Auth\";\r\n\r\nconst Tasks = () => {\r\n    const tasks = useLoaderData();\r\n\r\n\r\n\r\n    return (<>\r\n\r\n        <Suspense fallback={<p style={{ textAlign: 'center' }}>Loading...</p>}>\r\n            <Await resolve={tasks}>\r\n                {(loadedTasks) => <TaskList tasks={loadedTasks} />}\r\n            </Await>\r\n        </Suspense>\r\n    </>)\r\n\r\n}\r\n\r\nexport default Tasks;\r\n//'http://localhost:5000/'\r\n// https://react-backend-h14a.onrender.com/\r\nexport async function loader() {\r\n\r\n    const token = getAuthToken();\r\n    \r\n    const response = await fetch('http://localhost:5000/',{\r\n        // headers:{\r\n        //     'Authorization' : 'Bearer ' + token\r\n        //   }\r\n    });\r\n\r\n    if (!response.ok) {\r\n        // return { isError: true, message: 'Could not fetch events.' };\r\n        // throw new Response(JSON.stringify({ message: 'Could not fetch events.' }), {\r\n        //   status: 500,\r\n        // });\r\n        throw json(\r\n            { message: 'Could not fetch events.' },\r\n            {\r\n                status: 500,\r\n            }\r\n        );\r\n    } else {\r\n        const resData = await response.json();\r\n        return resData.events;\r\n    }\r\n\r\n    \r\n}"],"mappings":";;AAAA,SAASA,IAAI,EAAEC,aAAa,EAAEC,KAAK,QAAQ,kBAAkB;AAC7D,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,SAASC,YAAY,QAAQ,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE5C,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAMC,KAAK,GAAGX,aAAa,CAAC,CAAC;EAI7B,oBAAQM,OAAA,CAAAE,SAAA;IAAAI,QAAA,eAEJN,OAAA,CAACJ,QAAQ;MAACW,QAAQ,eAAEP,OAAA;QAAGQ,KAAK,EAAE;UAAEC,SAAS,EAAE;QAAS,CAAE;QAAAH,QAAA,EAAC;MAAU;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAE;MAAAP,QAAA,eAClEN,OAAA,CAACL,KAAK;QAACmB,OAAO,EAAET,KAAM;QAAAC,QAAA,EAChBS,WAAW,iBAAKf,OAAA,CAACH,QAAQ;UAACQ,KAAK,EAAEU;QAAY;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/C;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF;EAAC,gBACb,CAAC;AAEP,CAAC;AAAAT,EAAA,CAdKD,KAAK;EAAA,QACOT,aAAa;AAAA;AAAAsB,EAAA,GADzBb,KAAK;AAgBX,eAAeA,KAAK;AACpB;AACA;AACA,OAAO,eAAec,MAAMA,CAAA,EAAG;EAE3B,MAAMC,KAAK,GAAGpB,YAAY,CAAC,CAAC;EAE5B,MAAMqB,QAAQ,GAAG,MAAMC,KAAK,CAAC,wBAAwB,EAAC;IAClD;IACA;IACA;EAAA,CACH,CAAC;EAEF,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;IACd;IACA;IACA;IACA;IACA,MAAM5B,IAAI,CACN;MAAE6B,OAAO,EAAE;IAA0B,CAAC,EACtC;MACIC,MAAM,EAAE;IACZ,CACJ,CAAC;EACL,CAAC,MAAM;IACH,MAAMC,OAAO,GAAG,MAAML,QAAQ,CAAC1B,IAAI,CAAC,CAAC;IACrC,OAAO+B,OAAO,CAACC,MAAM;EACzB;AAGJ;AAAC,IAAAT,EAAA;AAAAU,YAAA,CAAAV,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}