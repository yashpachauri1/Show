{"ast":null,"code":"var _jsxFileName = \"C:\\\\react\\\\TaskJob\\\\frontend\\\\src\\\\components\\\\TaskForm.js\",\n  _s = $RefreshSig$();\nimport { Form, redirect, useNavigate, useNavigation, json, useActionData } from 'react-router-dom';\nimport classes from './TaskForm.module.css';\nimport { getAuthToken } from '../util/Auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TaskForm = ({\n  task\n}) => {\n  _s();\n  const data = useActionData();\n  const navigate = useNavigate();\n  const navigation = useNavigation();\n  const isSubmitting = navigation.state === 'submitting';\n  const cancelHandler = () => {\n    navigate('..');\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      method: \"POST\",\n      className: classes.form,\n      children: [data && data.errors && /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: Object.values(data.errors).map(err => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: err\n        }, err, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          name: \"name\",\n          required: true,\n          defaultValue: task ? task.title : ''\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"task\",\n          children: \"Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"task\",\n          type: \"text\",\n          name: \"task\",\n          required: true,\n          defaultValue: task ? task.date : ''\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          disabled: isSubmitting,\n          onClick: cancelHandler,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: isSubmitting,\n          type: \"submit\",\n          children: isSubmitting ? 'submitting' : 'add'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(TaskForm, \"4RpZWvb1/vq18jUIhqcDrPiPElE=\", false, function () {\n  return [useActionData, useNavigate, useNavigation];\n});\n_c = TaskForm;\nexport default TaskForm;\nexport async function action({\n  request,\n  params\n}) {\n  const data = await request.formData();\n  const token = getAuthToken();\n  const taskData = {\n    name: data.get('name'),\n    task: data.get('task')\n  };\n  const response = await fetch('https://react-backend-h14a.onrender.com/', {\n    method: 'POST',\n    body: JSON.stringify(taskData),\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"Authorization\": 'Bearar ' + token\n    }\n  });\n  if (!response.ok) {\n    throw json({\n      message: 'Could not save task'\n    }, {\n      status: 500\n    });\n  } else {\n    const dt = await response.json();\n    console.log('done', response);\n    return redirect('/tasks');\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"TaskForm\");","map":{"version":3,"names":["Form","redirect","useNavigate","useNavigation","json","useActionData","classes","getAuthToken","jsxDEV","_jsxDEV","Fragment","_Fragment","TaskForm","task","_s","data","navigate","navigation","isSubmitting","state","cancelHandler","children","method","className","form","errors","Object","values","map","err","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","name","required","defaultValue","title","date","actions","disabled","onClick","_c","action","request","params","formData","token","taskData","get","response","fetch","body","JSON","stringify","headers","ok","message","status","dt","console","log","$RefreshReg$"],"sources":["C:/react/TaskJob/frontend/src/components/TaskForm.js"],"sourcesContent":["import { Form, redirect, useNavigate, useNavigation, json, useActionData } from 'react-router-dom';\r\nimport classes from './TaskForm.module.css'\r\nimport { getAuthToken } from '../util/Auth';\r\n\r\nconst TaskForm = ({ task }) => {\r\n    const data = useActionData();\r\n    const navigate = useNavigate();\r\n    const navigation = useNavigation();\r\n     \r\n\r\n    const isSubmitting = navigation.state === 'submitting';\r\n\r\n    const cancelHandler = () => {\r\n        navigate('..');\r\n    }\r\n    return (\r\n\r\n        <>\r\n            <Form method='POST' className={classes.form}>\r\n                {data && data.errors && (\r\n                    <ul>\r\n                        {Object.values(data.errors).map((err) => (\r\n                            <li key={err}>{err}</li>\r\n                        ))}\r\n                    </ul>\r\n                )}\r\n                <p>\r\n                    <label htmlFor=\"name\">Name</label>\r\n                    <input type='text' id='name' name='name'\r\n                        required\r\n                        defaultValue={task ? task.title : ''}\r\n                    />\r\n                </p>\r\n                <p>\r\n                    <label htmlFor=\"task\">Task</label>\r\n                    <input\r\n                        id=\"task\"\r\n                        type=\"text\"\r\n                        name=\"task\"\r\n                        required\r\n\r\n                        defaultValue={task ? task.date : ''}\r\n                    />\r\n                </p>\r\n\r\n                <div className={classes.actions}>\r\n                    <button type=\"button\" disabled={isSubmitting} onClick={cancelHandler}>\r\n                        Cancel\r\n                    </button>\r\n                    <button disabled={isSubmitting} type=\"submit\" >\r\n                        {isSubmitting ? 'submitting' : 'add'}\r\n                    </button>\r\n                </div>\r\n            </Form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TaskForm;\r\n\r\nexport async function action({ request, params }) {\r\n    const data = await request.formData();\r\n    const token = getAuthToken();\r\n    const taskData = {\r\n        name: data.get('name'),\r\n        task: data.get('task')\r\n    }\r\n\r\n    const response = await fetch('https://react-backend-h14a.onrender.com/', {\r\n        method: 'POST',\r\n        body: JSON.stringify(taskData),\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Authorization\": 'Bearar ' + token\r\n        }\r\n    })\r\n    if (!response.ok) {\r\n        throw json({ message: 'Could not save task' }, { status: 500 });\r\n    }\r\n    else {\r\n        const dt = await response.json();\r\n          console.log('done',response)\r\n        return redirect('/tasks');\r\n    }\r\n\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}