{"ast":null,"code":"var _jsxFileName = \"C:\\\\react\\\\Task-app\\\\frontend\\\\src\\\\pages\\\\Tasks.js\",\n  _s = $RefreshSig$();\nimport { useLoaderData } from \"react-router-dom\";\nimport TaskList from \"../components/TaskList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Tasks = () => {\n  _s();\n  const data = useLoaderData();\n  console.log(data.message);\n  if (data.isError) {\n    console.log(data.message);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"alert alert-danger\",\n      role: \"alert\",\n      children: data.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 17\n    }, this);\n  }\n  console.log(data.message);\n  const tasks = data.events;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(TaskList, {\n      tasks: tasks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_s(Tasks, \"5thj+e1edPyRpKif1JmVRC6KArE=\", false, function () {\n  return [useLoaderData];\n});\n_c = Tasks;\nexport default Tasks;\nexport async function loader() {\n  const response = await fetch('http://localhost:5000/events');\n  if (!response.ok) {\n    return new Response(JSON.stringify({\n      message: 'Could not fetch tasks'\n    }), {\n      status: 500\n    });\n  } else {\n    console.log(response);\n    return response;\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"Tasks\");","map":{"version":3,"names":["useLoaderData","TaskList","jsxDEV","_jsxDEV","Fragment","_Fragment","Tasks","_s","data","console","log","message","isError","class","role","children","fileName","_jsxFileName","lineNumber","columnNumber","tasks","events","_c","loader","response","fetch","ok","Response","JSON","stringify","status","$RefreshReg$"],"sources":["C:/react/Task-app/frontend/src/pages/Tasks.js"],"sourcesContent":["import { useLoaderData } from \"react-router-dom\";\r\nimport TaskList from \"../components/TaskList\";\r\n\r\nconst Tasks = () => {\r\n    const data = useLoaderData();\r\n    console.log(data.message)\r\n    if (data.isError) {\r\n        console.log(data.message)\r\n        return  <div class=\"alert alert-danger\" role=\"alert\">\r\n        {data.message}\r\n        </div>\r\n    }\r\n    console.log(data.message)\r\n\r\n\r\n    const tasks = data.events\r\n    return (<>\r\n        <TaskList tasks={tasks} />\r\n\r\n    </>)\r\n\r\n}\r\n\r\nexport default Tasks;\r\n\r\nexport async function loader() {\r\n    const response = await fetch('http://localhost:5000/events');\r\n\r\n    if (!response.ok) {\r\n        return new Response(JSON.stringify({message:'Could not fetch tasks' }), { status: 500 });\r\n    } else {\r\n        console.log(response)\r\n        return response;\r\n    }\r\n}"],"mappings":";;AAAA,SAASA,aAAa,QAAQ,kBAAkB;AAChD,OAAOC,QAAQ,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE9C,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAMC,IAAI,GAAGR,aAAa,CAAC,CAAC;EAC5BS,OAAO,CAACC,GAAG,CAACF,IAAI,CAACG,OAAO,CAAC;EACzB,IAAIH,IAAI,CAACI,OAAO,EAAE;IACdH,OAAO,CAACC,GAAG,CAACF,IAAI,CAACG,OAAO,CAAC;IACzB,oBAAQR,OAAA;MAAKU,KAAK,EAAC,oBAAoB;MAACC,IAAI,EAAC,OAAO;MAAAC,QAAA,EACnDP,IAAI,CAACG;IAAO;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CAAC;EACV;EACAV,OAAO,CAACC,GAAG,CAACF,IAAI,CAACG,OAAO,CAAC;EAGzB,MAAMS,KAAK,GAAGZ,IAAI,CAACa,MAAM;EACzB,oBAAQlB,OAAA,CAAAE,SAAA;IAAAU,QAAA,eACJZ,OAAA,CAACF,QAAQ;MAACmB,KAAK,EAAEA;IAAM;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC,gBAE5B,CAAC;AAEP,CAAC;AAAAZ,EAAA,CAlBKD,KAAK;EAAA,QACMN,aAAa;AAAA;AAAAsB,EAAA,GADxBhB,KAAK;AAoBX,eAAeA,KAAK;AAEpB,OAAO,eAAeiB,MAAMA,CAAA,EAAG;EAC3B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;EAE5D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;IACd,OAAO,IAAIC,QAAQ,CAACC,IAAI,CAACC,SAAS,CAAC;MAAClB,OAAO,EAAC;IAAwB,CAAC,CAAC,EAAE;MAAEmB,MAAM,EAAE;IAAI,CAAC,CAAC;EAC5F,CAAC,MAAM;IACHrB,OAAO,CAACC,GAAG,CAACc,QAAQ,CAAC;IACrB,OAAOA,QAAQ;EACnB;AACJ;AAAC,IAAAF,EAAA;AAAAS,YAAA,CAAAT,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}