{"ast":null,"code":"var _jsxFileName = \"C:\\\\react\\\\Task-app\\\\frontend\\\\src\\\\components\\\\TaskItem.js\",\n  _s = $RefreshSig$();\nimport { Link, useSubmit, Form, json } from 'react-router-dom';\nimport classes from './TaskItem.module.css';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TaskItem({\n  task\n}) {\n  _s();\n  const submit = useSubmit();\n  function startDeleteHandler() {\n    const proceed = window.confirm('Are you sure?');\n    if (proceed) {\n      submit(null, {\n        method: 'delete'\n      });\n    }\n  }\n  const [check, setCheck] = useState();\n  return /*#__PURE__*/_jsxDEV(\"article\", {\n    className: classes.task,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: task.task\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: task.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"menu\", {\n      className: classes.actions,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-check form-switch\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-check-input\",\n          type: \"checkbox\",\n          name: \"checkbox\",\n          role: \"switch\",\n          id: \"flexSwitchCheckDefault\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-check-label\",\n          for: \"flexSwitchCheckDefault\",\n          children: \"complete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startDeleteHandler,\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n}\n_s(TaskItem, \"+Exz4/XwnJmGQ1Q6cYYXE4hsZCo=\", false, function () {\n  return [useSubmit];\n});\n_c = TaskItem;\nexport default TaskItem;\n\n// for update\nexport async function action({\n  params,\n  request\n}) {\n  const taskId = params.taskId;\n  const data = await request.formData();\n  const check = {\n    complete: data.get('checkbox')\n  };\n  const response = await fetch(`http://localhost:5000/${taskId}`, {\n    method: request.method,\n    body: JSON.stringify(check),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  });\n  if (!response.ok) {\n    throw json({\n      message: 'Could not fetch details for selected event'\n    }, {\n      status: 500\n    });\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"TaskItem\");","map":{"version":3,"names":["Link","useSubmit","Form","json","classes","useState","jsxDEV","_jsxDEV","TaskItem","task","_s","submit","startDeleteHandler","proceed","window","confirm","method","check","setCheck","className","children","fileName","_jsxFileName","lineNumber","columnNumber","name","actions","type","role","id","for","onClick","_c","action","params","request","taskId","data","formData","complete","get","response","fetch","body","JSON","stringify","headers","ok","message","status","$RefreshReg$"],"sources":["C:/react/Task-app/frontend/src/components/TaskItem.js"],"sourcesContent":["import { Link, useSubmit, Form, json } from 'react-router-dom';\r\n\r\nimport classes from './TaskItem.module.css';\r\nimport { useState } from 'react';\r\n\r\nfunction TaskItem({ task }) {\r\n    const submit = useSubmit();\r\n\r\n    function startDeleteHandler() {\r\n        const proceed = window.confirm('Are you sure?');\r\n\r\n        if (proceed) {\r\n            submit(null, { method: 'delete' });\r\n        }\r\n    }\r\nconst [check, setCheck] = useState();\r\n\r\n\r\n\r\n    return (\r\n        <article className={classes.task}>\r\n\r\n            <h1>{task.task}</h1>\r\n\r\n            <p>{task.name}</p>\r\n            <menu className={classes.actions}>\r\n            <div className=\"form-check form-switch\">\r\n                    <input className=\"form-check-input\" type=\"checkbox\" name='checkbox' role=\"switch\" id=\"flexSwitchCheckDefault\" />\r\n                    <label className=\"form-check-label\" for=\"flexSwitchCheckDefault\">complete</label>\r\n                </div>\r\n                <button onClick={startDeleteHandler}>Delete</button>\r\n            </menu>\r\n        </article>\r\n    );\r\n}\r\n\r\nexport default TaskItem;\r\n\r\n// for update\r\nexport async function action({params, request})\r\n{\r\n    const taskId = params.taskId;\r\n    const data  = await request.formData();\r\n  \r\n    const check={\r\n        complete: data.get('checkbox')\r\n    } ;\r\n\r\n    const response = await fetch(`http://localhost:5000/${taskId}`, {\r\n        method:request.method,\r\n        body:JSON.stringify(check),\r\n        headers:{\r\n            \"Content-Type\": \"application/json\"\r\n        }\r\n    });\r\n    if (!response.ok) {\r\n        throw json({ message: 'Could not fetch details for selected event' }, { status: 500 }\r\n\r\n        );\r\n\r\n    }\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}