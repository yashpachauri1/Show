{"ast":null,"code":"import _regeneratorRuntime from\"C:/react/TaskJob/Taskk/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"C:/react/TaskJob/Taskk/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import{Form,redirect,useNavigate,useNavigation,json,useActionData}from'react-router-dom';import classes from'./TaskForm.module.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var TaskForm=function TaskForm(_ref){var task=_ref.task;var data=useActionData();var navigate=useNavigate();var navigation=useNavigation();var isSubmitting=navigation.state==='submitting';var cancelHandler=function cancelHandler(){navigate('..');};return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(Form,{method:\"POST\",className:classes.form,children:[data&&data.errors&&/*#__PURE__*/_jsx(\"ul\",{children:Object.values(data.errors).map(function(err){return/*#__PURE__*/_jsx(\"li\",{children:err},err);})}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"name\",children:\"Name\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"name\",name:\"name\",required:true,defaultValue:task?task.title:''})]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"task\",children:\"Task\"}),/*#__PURE__*/_jsx(\"input\",{id:\"task\",type:\"text\",name:\"task\",required:true,defaultValue:task?task.date:''})]}),/*#__PURE__*/_jsxs(\"div\",{className:classes.actions,children:[/*#__PURE__*/_jsx(\"button\",{type:\"button\",disabled:isSubmitting,onClick:cancelHandler,children:\"Cancel\"}),/*#__PURE__*/_jsx(\"button\",{disabled:isSubmitting,type:\"submit\",children:isSubmitting?'submitting':'add'})]})]})});};export default TaskForm;export function action(_x){return _action.apply(this,arguments);}function _action(){_action=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(_ref2){var request,params,data,taskData,response;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:request=_ref2.request,params=_ref2.params;_context.next=3;return request.formData();case 3:data=_context.sent;taskData={name:data.get('name'),task:data.get('task')};_context.next=7;return fetch('http://localhost:5000/',{method:'POST',body:JSON.stringify(taskData),headers:{\"Content-Type\":\"application/json\"}});case 7:response=_context.sent;if(response.ok){_context.next=12;break;}throw json({message:'Could not save task'},{status:500});case 12:return _context.abrupt(\"return\",redirect('/tasks'));case 13:case\"end\":return _context.stop();}},_callee);}));return _action.apply(this,arguments);}","map":{"version":3,"names":["Form","redirect","useNavigate","useNavigation","json","useActionData","classes","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","TaskForm","_ref","task","data","navigate","navigation","isSubmitting","state","cancelHandler","children","method","className","form","errors","Object","values","map","err","htmlFor","type","id","name","required","defaultValue","title","date","actions","disabled","onClick","action","_x","_action","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_ref2","request","params","taskData","response","wrap","_callee$","_context","prev","next","formData","sent","get","fetch","body","JSON","stringify","headers","ok","message","status","abrupt","stop"],"sources":["C:/react/TaskJob/Taskk/frontend/src/components/TaskForm.js"],"sourcesContent":["import { Form, redirect, useNavigate, useNavigation, json, useActionData } from 'react-router-dom';\r\nimport classes from './TaskForm.module.css'\r\n\r\nconst TaskForm = ({ task }) => {\r\n    const data = useActionData();\r\n    const navigate = useNavigate();\r\n    const navigation = useNavigation();\r\n\r\n    const isSubmitting = navigation.state === 'submitting';\r\n\r\n    const cancelHandler = () => {\r\n        navigate('..');\r\n    }\r\n    return (\r\n\r\n        <>\r\n            <Form method='POST' className={classes.form}>\r\n                {data && data.errors && (\r\n                    <ul>\r\n                        {Object.values(data.errors).map((err) => (\r\n                            <li key={err}>{err}</li>\r\n                        ))}\r\n                    </ul>\r\n                )}\r\n                <p>\r\n                    <label htmlFor=\"name\">Name</label>\r\n                    <input type='text' id='name' name='name'\r\n                        required\r\n                        defaultValue={task ? task.title : ''}\r\n                    />\r\n                </p>\r\n                <p>\r\n                    <label htmlFor=\"task\">Task</label>\r\n                    <input\r\n                        id=\"task\"\r\n                        type=\"text\"\r\n                        name=\"task\"\r\n                        required\r\n\r\n                        defaultValue={task ? task.date : ''}\r\n                    />\r\n                </p>\r\n\r\n                <div className={classes.actions}>\r\n                    <button type=\"button\" disabled={isSubmitting} onClick={cancelHandler}>\r\n                        Cancel\r\n                    </button>\r\n                    <button disabled={isSubmitting} type=\"submit\" >\r\n                        {isSubmitting ? 'submitting' : 'add'}\r\n                    </button>\r\n                </div>\r\n            </Form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TaskForm;\r\n\r\nexport async function action({ request, params }) {\r\n    const data = await request.formData();\r\n\r\n    const taskData = {\r\n        name: data.get('name'),\r\n        task: data.get('task')\r\n    }\r\n\r\n    const response = await fetch('http://localhost:5000/', {\r\n        method: 'POST',\r\n        body: JSON.stringify(taskData),\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        }\r\n    })\r\n    if (!response.ok) {\r\n        throw json({ message: 'Could not save task' }, { status: 500 });\r\n    }\r\n    else {\r\n\r\n        return redirect('/tasks');\r\n    }\r\n\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}