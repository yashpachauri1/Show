{"ast":null,"code":"var _jsxFileName = \"C:\\\\react\\\\Task-app\\\\frontend\\\\src\\\\pages\\\\Tasks.js\",\n  _s = $RefreshSig$();\nimport { json, useLoaderData } from \"react-router-dom\";\nimport { Suspense } from 'react';\nimport TaskList from \"../components/TaskList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Tasks = () => {\n  _s();\n  const data = useLoaderData();\n  if (data.isError) {\n    console.log(data.message);\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: data.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 15\n    }, this);\n  }\n  const tasks = data.events;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Suspense, {\n      fallback: /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          textAlign: 'center'\n        },\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 26\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(Await, {\n        resolve: events,\n        children: loadedEvents => /*#__PURE__*/_jsxDEV(TaskList, {\n          tasks: tasks\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 27\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n      tasks: tasks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(Tasks, \"5thj+e1edPyRpKif1JmVRC6KArE=\", false, function () {\n  return [useLoaderData];\n});\n_c = Tasks;\nexport default Tasks;\nexport async function loader() {\n  const response = await fetch('http://localhost:5000/e');\n  if (!response.ok) {\n    return new Response(JSON.stringify({\n      message: 'Could not fetch events'\n    }), {\n      status: 500\n    });\n  } else {\n    return response;\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"Tasks\");","map":{"version":3,"names":["json","useLoaderData","Suspense","TaskList","jsxDEV","_jsxDEV","Fragment","_Fragment","Tasks","_s","data","isError","console","log","message","children","fileName","_jsxFileName","lineNumber","columnNumber","tasks","events","fallback","style","textAlign","Await","resolve","loadedEvents","_c","loader","response","fetch","ok","Response","JSON","stringify","status","$RefreshReg$"],"sources":["C:/react/Task-app/frontend/src/pages/Tasks.js"],"sourcesContent":["import { json, useLoaderData } from \"react-router-dom\";\r\nimport { Suspense } from 'react';\r\nimport TaskList from \"../components/TaskList\";\r\n\r\nconst Tasks = () => {\r\n    const data = useLoaderData();\r\n\r\n    if(data.isError){\r\n        console.log(data.message)\r\n        return<p>{data.message}</p>\r\n    }\r\n\r\n    const tasks = data.events\r\n    return (<>\r\n     <Suspense fallback={<p style={{ textAlign: 'center' }}>Loading...</p>}>\r\n      <Await resolve={events}>\r\n        {(loadedEvents) =><TaskList tasks={tasks}  />}\r\n      </Await>\r\n    </Suspense>\r\n        <TaskList tasks={tasks} />\r\n\r\n    </>)\r\n\r\n}\r\n\r\nexport default Tasks;\r\n\r\nexport async function loader() {\r\n    const response = await fetch('http://localhost:5000/e');\r\n\r\n    if (!response.ok) {\r\n        return new Response(JSON.stringify({message:'Could not fetch events'}),{status:500});\r\n    } else {\r\n      \r\n        return response;\r\n    }\r\n}"],"mappings":";;AAAA,SAASA,IAAI,EAAEC,aAAa,QAAQ,kBAAkB;AACtD,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,QAAQ,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE9C,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAMC,IAAI,GAAGT,aAAa,CAAC,CAAC;EAE5B,IAAGS,IAAI,CAACC,OAAO,EAAC;IACZC,OAAO,CAACC,GAAG,CAACH,IAAI,CAACI,OAAO,CAAC;IACzB,oBAAMT,OAAA;MAAAU,QAAA,EAAIL,IAAI,CAACI;IAAO;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAC/B;EAEA,MAAMC,KAAK,GAAGV,IAAI,CAACW,MAAM;EACzB,oBAAQhB,OAAA,CAAAE,SAAA;IAAAQ,QAAA,gBACPV,OAAA,CAACH,QAAQ;MAACoB,QAAQ,eAAEjB,OAAA;QAAGkB,KAAK,EAAE;UAAEC,SAAS,EAAE;QAAS,CAAE;QAAAT,QAAA,EAAC;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAE;MAAAJ,QAAA,eACrEV,OAAA,CAACoB,KAAK;QAACC,OAAO,EAAEL,MAAO;QAAAN,QAAA,EACnBY,YAAY,iBAAItB,OAAA,CAACF,QAAQ;UAACiB,KAAK,EAAEA;QAAM;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,eACPd,OAAA,CAACF,QAAQ;MAACiB,KAAK,EAAEA;IAAM;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA,eAE5B,CAAC;AAEP,CAAC;AAAAV,EAAA,CAnBKD,KAAK;EAAA,QACMP,aAAa;AAAA;AAAA2B,EAAA,GADxBpB,KAAK;AAqBX,eAAeA,KAAK;AAEpB,OAAO,eAAeqB,MAAMA,CAAA,EAAG;EAC3B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,yBAAyB,CAAC;EAEvD,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;IACd,OAAO,IAAIC,QAAQ,CAACC,IAAI,CAACC,SAAS,CAAC;MAACrB,OAAO,EAAC;IAAwB,CAAC,CAAC,EAAC;MAACsB,MAAM,EAAC;IAAG,CAAC,CAAC;EACxF,CAAC,MAAM;IAEH,OAAON,QAAQ;EACnB;AACJ;AAAC,IAAAF,EAAA;AAAAS,YAAA,CAAAT,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}